{"ast":null,"code":"var _jsxFileName = \"/Users/aizhan/Documents/folders/repos/react/react-quiz/src/pages/Home.tsx\";\nimport React, { useState } from \"react\";\nimport { fetchQuizQuestions } from \"../API\";\nimport QuestionCard from \"../components/QuestionCard\"; // types\n\nimport { Difficulty } from \"../API\";\nimport { Wrapper } from \"./Home.styles\";\nconst TOTAL_QUESTIONS = 10;\n\nconst Home = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = e => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      const correct = questions[number].correct_answer === answer;\n      if (correct) setScore(prev => prev + 1);\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer\n      };\n      setUserAnswers(prev => [...prev, answerObject]);\n    }\n  };\n\n  const nextQuestion = () => {\n    const nextQ = number + 1;\n    nextQ === TOTAL_QUESTIONS ? setGameOver(true) : setNumber(nextQ);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"REACT QUIZ\"), gameOver || userAnswers.length === TOTAL_QUESTIONS ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start\",\n    onClick: startTrivia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Start\") : null, !gameOver ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 22\n    }\n  }, \"Score: \", score) : null, loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 20\n    }\n  }, \"Loading Questions...\") : null, !loading && !gameOver && /*#__PURE__*/React.createElement(QuestionCard, {\n    questionNr: number + 1,\n    totalQuestions: TOTAL_QUESTIONS,\n    question: questions[number].question,\n    answers: questions[number].answers,\n    userAnswer: userAnswers ? userAnswers[number] : undefined,\n    callback: checkAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), !gameOver && !loading && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"next\",\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Next Question\") : null));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/aizhan/Documents/folders/repos/react/react-quiz/src/pages/Home.tsx"],"names":["React","useState","fetchQuizQuestions","QuestionCard","Difficulty","Wrapper","TOTAL_QUESTIONS","Home","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","startTrivia","newQuestions","EASY","checkAnswer","e","answer","currentTarget","value","correct","correct_answer","prev","answerObject","question","correctAnswer","nextQuestion","nextQ","length","answers","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { fetchQuizQuestions } from \"../API\";\nimport QuestionCard from \"../components/QuestionCard\";\n// types\nimport { QuestionsState, Difficulty, AnswerObject } from \"../API\";\nimport { Wrapper } from \"./Home.styles\";\n\nconst TOTAL_QUESTIONS = 10;\n\nconst Home: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<QuestionsState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    );\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = (e: any) => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      const correct = questions[number].correct_answer === answer;\n      if (correct) setScore((prev) => prev + 1);\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer,\n      };\n      setUserAnswers((prev) => [...prev, answerObject]);\n    }\n  };\n\n  const nextQuestion = () => {\n    const nextQ = number + 1;\n\n    (nextQ === TOTAL_QUESTIONS) ? setGameOver(true) : setNumber(nextQ);\n    \n  };\n\n  return (\n    <>\n      <Wrapper>\n        <h1>REACT QUIZ</h1>\n        {gameOver || userAnswers.length === TOTAL_QUESTIONS ? (\n          <button className=\"start\" onClick={startTrivia}>\n            Start\n          </button>\n        ) : null}\n        {!gameOver ? <p className=\"score\">Score: {score}</p> : null}\n        {loading ? <p>Loading Questions...</p> : null}\n        {!loading && !gameOver && (\n          <QuestionCard\n            questionNr={number + 1}\n            totalQuestions={TOTAL_QUESTIONS}\n            question={questions[number].question}\n            answers={questions[number].answers}\n            userAnswer={userAnswers ? userAnswers[number] : undefined}\n            callback={checkAnswer}\n          />\n        )}\n        {!gameOver &&\n        !loading &&\n        userAnswers.length === number + 1 &&\n        number !== TOTAL_QUESTIONS - 1 ? (\n          <button className=\"next\" onClick={nextQuestion}>\n            Next Question\n          </button>\n        ) : null}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}